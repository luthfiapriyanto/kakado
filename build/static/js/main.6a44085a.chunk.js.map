{"version":3,"sources":["brand_logo.png","landing_header.jpg","index.js","App.js","Landing.js","Recipient.js","recipient_gift.jpg","utils/Routing.web.js","serviceWorker.js"],"names":["module","exports","__webpack_require__","p","_react","_interopRequireDefault","_reactDom","_App","serviceWorker","_interopRequireWildcard","ReactDOM","render","default","createElement","document","getElementById","unregister","_reactNativeWeb","_Landing","_Recipient","_Routing","App","Router","Switch","Route","exact","path","component","Landing","Recipient","Component","hotWrapper","Platform","OS","require","hot","_brand_logo","_landing_header","_formik","_firebase","yup","_reactLoadingOverlay","props","_this","_classCallCheck2","this","_possibleConstructorReturn2","_getPrototypeOf2","call","_onButtonSubmitClick","value","setState","isLoading","occasion","state","dropdownValue","senderName","senderPhone","senderEmail","budgetMin","budgetMax","message","recipientEmail","firebase","database","ref","push","then","data","console","log","messageId","key","_sendEmail","catch","error","id","recipientUrl","concat","window","emailjs","send","recipient_email","recipient_url","sender_name","res","err","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","_this2","validationSchema","object","shape","string","label","email","required","number","active","spinner","View","style","styles","container","Image","source","logo","marginVertical","marginHorizontal","borderBottomColor","borderBottomWidth","width","height","headerImage","headerImg","formContainer","Text","fontSize","marginBottom","Formik","initialValues","onSubmit","_ref","handleChange","handleSubmit","isValid","flexDirection","marginTop","flex","TextInput","onChangeText","paddingHorizontal","paddingVertical","borderColor","borderWidth","placeholder","Picker","selectedValue","onValueChange","itemValue","itemIndex","Item","multiline","Button","disabled","color","onPress","title","StyleSheet","create","paddingTop","backgroundColor","alignItems","justifyContent","overflow","shadowColor","shadowRadius","shadowOpacity","yellowRibbon","fontWeight","titleBar","button","borderRadius","padding","buttonText","_recipient_gift","recipientMessage","sender_email","recipient_message","messageValue","location","search","split","pop","min","undefined","max","once","snapshot","val","image","imageAsset","paddingBottom","_reactRouterDom","config","navigator","publicUrl","URL","process","href","origin","addEventListener","swUrl","isLocalhost","fetch","response","contentType","headers","get","status","indexOf","ready","registration","reload","registerValidSW","checkValidServiceWorker","Boolean","hostname","match","register","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess"],"mappings":"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","file":"static/js/main.6a44085a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brand_logo.7f5de808.png\";","module.exports = __webpack_public_path__ + \"static/media/landing_header.35b73e21.jpg\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import matchMedia from 'react-native-match-media'\nimport firebase from 'firebase';\n\n// Only for native, will already be set on web\n// global.matchMedia = matchMedia;\nReactDOM.render(<App />, document.getElementById('root'));\n//\n// const config = {\n//     databaseURL: 'https://gradire-83417.firebaseio.com',\n//     projectId: 'gradire-83417',\n// };\n// firebase.initializeApp(config);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\nimport {\n  Platform,\n} from 'react-native';\nimport Landing from './Landing';\nimport Recipient from './Recipient';\nimport { Route, Router, Switch } from './utils/Routing.web';\n\n\nclass App extends Component {\n\n  render() {\n    return (\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/recipient\" component={Recipient} />\n          </Switch>\n        </Router>\n    )\n  }\n}\n\nlet hotWrapper = () => () => App;\nif (Platform.OS === 'web') {\n  const { hot } = require('react-hot-loader');\n  hotWrapper = hot;\n}\nexport default hotWrapper(module)(App);\n","import { Image, Picker, StyleSheet, Text, TextInput, View } from 'react-native';\nimport logo from './brand_logo.png';\nimport headerImage from './landing_header.jpg';\nimport { Formik } from 'formik';\nimport { Button } from 'react-native-web';\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport * as yup from 'yup';\nimport LoadingOverlay from 'react-loading-overlay';\n\nclass Landing extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dropdownValue: 'Birthday',\n            messageId: '',\n            isLoading: false\n        };\n\n        const config = {\n            apiKey: \"AIzaSyAB8TiSYqmJGJaDJ2xHUjhW3j9UMdNwV-Q\",\n            authDomain: \"gradire-83417.firebaseapp.com\",\n            databaseURL: \"https://gradire-83417.firebaseio.com\",\n            projectId: \"gradire-83417\",\n            storageBucket: \"gradire-83417.appspot.com\",\n            messagingSenderId: \"992342878515\",\n            appId: \"1:992342878515:web:f04a70c41b72dc56f37646\",\n            measurementId: \"G-FQPG4LXVYL\"\n        };\n        if (!firebase.apps.length) {\n            firebase.initializeApp(config);\n        }\n\n    }\n\n    _onButtonSubmitClick = (value) => {\n        this.setState({ isLoading: true });\n        const occasion  = this.state.dropdownValue;\n        const {\n            senderName,\n            senderPhone,\n            senderEmail,\n            budgetMin,\n            budgetMax,\n            message,\n            recipientEmail\n        } = value;\n\n        firebase.database().ref('MessageList/').push({\n            senderName,\n            senderPhone,\n            senderEmail,\n            occasion,\n            budgetMin,\n            budgetMax,\n            message,\n            recipientEmail,\n        }).then((data)=>{\n            console.log('data ' , data)\n            this.setState({ messageId: data.key });\n            this._sendEmail(value, occasion, data.key);\n\n        }).catch((error)=>{\n            this.setState({ isLoading: false });\n            console.log('error ' , error)\n        })\n\n    };\n\n    _sendEmail = (value, occasion, id) => {\n        const {\n            senderName,\n            recipientEmail\n        } = value;\n        const user_id = 'user_n6HTP5Cb1hviBCnr7qva4';\n        const recipientUrl = `http://localhost:3000/recipient?${id}`;\n\n        const templateId = 'template_QG18UX4g';\n        window.emailjs\n            .send('default_service', templateId, {\n                    recipient_email: recipientEmail,\n                    recipient_url: recipientUrl,\n                    sender_name: senderName,\n                    occasion: this.state.occasion\n                },\n                user_id\n            )\n            .then(res => {\n                this.setState({ isLoading: false });\n                console.log('XCX', res)\n            })\n            // Handle errors here however you like\n            .catch(err => {\n                this.setState({ isLoading: false });\n                console.error('Failed to send feedback. Error: ', err)\n            });\n    }\n\n\n    render() {\n        const validationSchema = yup.object().shape({\n            senderEmail: yup.string()\n                .label('Email')\n                .email('Enter a valid email')\n                .required('Please enter a valid email'),\n            senderName: yup.string()\n                .label('Name')\n                .required('Please enter a valid name'),\n            senderPhone: yup.number()\n                .label('Phone Number'),\n            message: yup.string()\n                .label('Message')\n                .required('Please enter a valid message'),\n            budgetMin: yup.number()\n                .label('Budget Minimum'),\n            budgetMax: yup.number()\n                .label('Budget Maximum'),\n            recipientEmail: yup.string()\n                .label('Email')\n                .email('Enter a valid email')\n                .required('Please enter a valid email'),\n        });\n\n        return (\n            <LoadingOverlay\n                active={this.state.isLoading}\n                spinner\n            >\n                <View style={styles.container}>\n                    <Image source={logo} style={styles.logo}/>\n                    <View style={{ marginVertical: 16, marginHorizontal: 16, borderBottomColor: '#FDF5D8', borderBottomWidth: 50, width: '100%', height: 50 }}/>\n                    <Image source={headerImage} style={styles.headerImg}/>\n\n                    <View style={styles.formContainer}>\n                        <Text style={{ fontSize: 36, marginBottom: 40 }}>Your journey starts here</Text>\n                        <Text style={{ fontSize: 20, marginBottom: 60 }}>{`No more guessing, fill anything related to what you want to explain, and what\\nyou want to get and to know from your mate`}\n                        </Text>\n                        <Formik initialValues={{\n                            senderName: '',\n                            senderPhone: '',\n                            senderEmail: '',\n                            occasion: '',\n                            budgetMin: '',\n                            budgetMax: '',\n                            message: '',\n                            recipientEmail: ''\n                        }}\n                                validationSchema={validationSchema}\n                                onSubmit={this._onButtonSubmitClick}>\n                            {({ handleChange, handleSubmit, isValid }) => (\n                                <View style={{ flexDirection: 'row'}}>\n                                    <View style={{ width: '50%'}}>\n                                        <Text style={{ fontSize: 20 }}>Your details</Text>\n                                        <View style={{ marginTop: 30 }}>\n                                            <Text style={{ fontSize: 17 }}>Input your name</Text>\n                                            <View style={{ flexDirection: 'row', flex: 1, marginVertical: 16 }}>\n                                                <TextInput onChangeText={handleChange('senderName')} style={{ paddingHorizontal: 16, paddingVertical: 16, height: 40, borderColor: '#000', borderWidth: 1,  }} placeholder={'Michael'}/>\n                                            </View>\n                                        </View>\n                                        <View style={{ marginTop: 40 }}>\n                                            <Text style={{ fontSize: 17 }}>Input your phone number</Text>\n                                            <View style={{ flexDirection: 'row', flex: 1, marginVertical: 16 }}>\n                                                <TextInput onChangeText={handleChange('senderPhone')} style={{ paddingHorizontal: 16, paddingVertical: 16, height: 40, borderColor: '#000', borderWidth: 1,  }} placeholder={'08001231231'}/>\n                                            </View>\n                                        </View>\n                                        <View style={{ marginTop: 40 }}>\n                                            <Text style={{ fontSize: 17 }}>Input your email</Text>\n                                            <View style={{ flexDirection: 'row', flex: 1, marginVertical: 16 }}>\n                                                <TextInput onChangeText={handleChange('senderEmail')} style={{ paddingHorizontal: 16, paddingVertical: 16, height: 40, borderColor: '#000', borderWidth: 1,  }} placeholder={'example@mail.com'}/>\n                                            </View>\n                                        </View>\n                                    </View>\n                                    <View style={{ width: '50%'}}>\n                                        <Text style={{ fontSize: 20 }}>Your Friend's details</Text>\n\n                                        <View style={{ marginTop: 30 }}>\n                                            <Text style={{ fontSize: 17 }}>What is the occasion?</Text>\n                                            <Picker\n                                                style={{ marginVertical: 16 }}\n                                                selectedValue={this.state.dropdownValue}\n                                                onValueChange={(itemValue, itemIndex) =>\n                                                    this.setState({ dropdownValue: itemValue })\n                                                }>\n                                                <Picker.Item label=\"Birthday\" value=\"Birthday\" />\n                                                <Picker.Item label=\"Wedding\" value=\"Wedding\" />\n                                                <Picker.Item label=\"Others\" value=\"Others\" />\n                                            </Picker>\n                                        </View>\n                                        <View style={{ marginTop: 40 }}>\n                                            <Text style={{ fontSize: 17 }}>What is you budget limit?</Text>\n                                            <View style={{ flexDirection: 'row', flex: 1, marginVertical: 16 }}>\n                                                <TextInput onChangeText={handleChange('budgetMin')} style={{ paddingHorizontal: 16, paddingVertical: 16, height: 40, borderColor: '#000', borderWidth: 1,  }} placeholder={'100000'}/>\n                                                <View style={{ marginVertical: 16, marginHorizontal: 16, borderBottomColor: '#000', borderBottomWidth: 1, width: '5%', height: '50%' }} />\n                                                <TextInput onChangeText={handleChange('budgetMax')} style={{ paddingHorizontal: 16, paddingVertical: 16, height: 40, borderColor: '#000', borderWidth: 1 }} placeholder={'1500000'}/>\n                                            </View>\n                                        </View>\n                                        <View style={{ marginTop: 40 }}>\n                                            <Text style={{ fontSize: 17 }}>Make it personal, write whatever you want to say!</Text>\n                                            <TextInput\n                                                onChangeText={handleChange('message')}\n                                                multiline={true}\n                                                style={{\n                                                    width: '100%',\n                                                    paddingHorizontal: 16,\n                                                    paddingVertical: 16,\n                                                    height: 200,\n                                                    borderColor: '#000',\n                                                    borderWidth: 1,\n                                                    marginVertical: 16\n                                                }}\n                                                placeholder={'Hi, mate. I know you have no clue about me, but I do know you for sure. And I will answer all of your wishes!'}/>\n\n                                        </View>\n                                        <View style={{ marginTop: 40 }}>\n                                            <Text style={{ fontSize: 17 }}>Where will all of this be sent? Fill with your friend's email</Text>\n                                            <TextInput onChangeText={handleChange('recipientEmail')} style={{ paddingHorizontal: 16, paddingVertical: 16, height: 40, borderColor: '#000', borderWidth: 1, marginVertical: 16 }} placeholder={'friends@examples.com'}/>\n                                        </View>\n                                        <View style={{ marginTop: 40, width: 250 }}>\n                                            <Button disabled={!isValid} color={'#000'}  onPress={handleSubmit} title={'SEND'}/>\n                                        </View>\n                                    </View>\n                                </View>\n                            )}\n                        </Formik>\n                    </View>\n                </View>\n            </LoadingOverlay>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        paddingTop: 50,\n        flex: 1,\n        backgroundColor: '#FFFEFA',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    formContainer: {\n        marginBottom: 100,\n        flex: 1,\n        backgroundColor: '#FFFEFA',\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n        borderColor: '#FDF5D8',\n        borderWidth:1,\n        overflow: 'hidden',\n        shadowColor: '#FDF5D8',\n        shadowRadius: 10,\n        shadowOpacity: 1,\n        paddingHorizontal: 100,\n        paddingVertical: 70\n    },\n    yellowRibbon: {\n        paddingTop: 50,\n        color: '#FDF5D8',\n        height: 78,\n        width: '100%'\n    },\n    logo: {\n        marginVertical: 20,\n        paddingHorizontal: 30,\n        width: 200,\n        height: 200,\n    },\n    headerImg: {\n        marginBottom: 50,\n        width: '100%',\n        height: 400,\n    },\n    title: {\n        fontWeight: 'bold',\n        fontSize: 16,\n    },\n    titleBar: {\n        fontSize: 38\n    },\n    button: {\n        borderRadius: 3,\n        padding: 20,\n        marginVertical: 10,\n        marginTop: 10,\n        backgroundColor: '#1B95E0',\n    },\n    buttonText: {\n        color: '#fff',\n        fontWeight: 'bold',\n        fontSize: 16,\n    },\n});\n\nexport default Landing;\n","import { Image, Picker, StyleSheet, Text, TextInput, View } from 'react-native';\nimport image from './recipient_gift.jpg';\nimport logo from './brand_logo.png';\nimport { Formik } from 'formik';\nimport { Button } from 'react-native-web';\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport headerImage from './landing_header.jpg';\nimport LoadingOverlay from 'react-loading-overlay';\n\n\nclass Recipient extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            messageValue: '',\n            messageId: props.location.search.split('?').pop(),\n            min: undefined,\n            max: '',\n            isLoading: true\n        };\n\n        const config = {\n            apiKey: \"AIzaSyAB8TiSYqmJGJaDJ2xHUjhW3j9UMdNwV-Q\",\n            authDomain: \"gradire-83417.firebaseapp.com\",\n            databaseURL: \"https://gradire-83417.firebaseio.com\",\n            projectId: \"gradire-83417\",\n            storageBucket: \"gradire-83417.appspot.com\",\n            messagingSenderId: \"992342878515\",\n            appId: \"1:992342878515:web:f04a70c41b72dc56f37646\",\n            measurementId: \"G-FQPG4LXVYL\"\n        };\n        if (!firebase.apps.length) {\n            firebase.initializeApp(config);\n        }\n\n    }\n\n    componentDidMount() {\n        firebase.database().ref(`MessageList/${this.state.messageId}`).once('value',  (snapshot) => {\n            this.setState({\n                messageValue: snapshot.val().message,\n                senderEmail: snapshot.val().senderEmail,\n                recipientEmail: snapshot.val().recipientEmail,\n                min: snapshot.val().budgetMin,\n                max: snapshot.val().budgetMax,\n                isLoading: false\n            });\n        });\n    }\n\n    _onButtonSubmitClick = (value) => {\n        this.setState({ isLoading: true });\n        const {\n            recipientMessage,\n        } = value;\n\n        firebase.database().ref('WishesList/').push({\n            recipientMessage,\n        }).then((data)=>{\n            this._sendEmail(recipientMessage);\n\n        }).catch((error)=>{\n            this.setState({ isLoading: false });\n\n            console.log('error ' , error)\n        })\n\n    };\n\n    _sendEmail = (value) => {\n\n        const user_id = 'user_n6HTP5Cb1hviBCnr7qva4';\n\n        const templateId = 'template_QG18UX4g_clone';\n        window.emailjs\n            .send('default_service', templateId, {\n                    recipient_email: this.state.recipientEmail,\n                    sender_email: this.state.senderEmail,\n                    recipient_message: value\n                },\n                user_id\n            )\n            .then(res => {\n                this.setState({ isLoading: false });\n\n                console.log('XCX', res)\n            })\n            // Handle errors here however you like\n\n            .catch(err => {\n                this.setState({ isLoading: false });\n\n                console.error('Failed to send feedback. Error: ', err)\n            });\n    }\n\n\n    render() {\n\n        return (\n            <LoadingOverlay\n                active={this.state.isLoading}\n                spinner\n            >\n                <View style={styles.container}>\n                    <Image source={logo} style={styles.logo}/>\n                    <View style={{ marginVertical: 16, marginHorizontal: 16, borderBottomColor: '#FDF5D8', borderBottomWidth: 50, width: '100%', height: 50 }}/>\n                    <Image source={headerImage} style={styles.headerImg}/>\n\n                    <View style={styles.formContainer}>\n                        <Image source={image} style={styles.imageAsset}/>\n                        <Text style={{ fontSize: 34, marginTop: 30 }}>Your Occasion is About to Coming</Text>\n                        <View style={{ alignItems: 'flex-start',\n                            justifyContent: 'flex-start', width: '100%' }}>\n                            <Text style={{ fontSize: 20, marginTop: 50 }}>{this.state.messageValue}</Text>\n                            <Text style={{ fontSize: 18, marginTop: 20 }}>{`Your budget is limited to Rp${this.state.min} - Rp${this.state.max}`}</Text>\n\n                        </View>\n\n                        <Formik initialValues={{\n                            recipientMessage: ''\n                        }}\n                                onSubmit={this._onButtonSubmitClick}>\n                            {({ handleChange, handleSubmit, isValid }) => (\n                                <View style={{ flex: 1, width: '100%' }}>\n                                    <View style={{ flex: 1, marginTop: 40, width: '100%' }}>\n                                        <Text style={{ fontSize: 18 }}>Please explain what you really want!</Text>\n                                        <TextInput\n                                            onChangeText={handleChange('recipientMessage')}\n                                            multiline={true}\n                                            style={{\n                                                width: '100%',\n                                                paddingHorizontal: 16,\n                                                paddingVertical: 16,\n                                                height: 200,\n                                                borderColor: '#000',\n                                                borderWidth: 1,\n                                                marginVertical: 16,\n                                                backgroundColor: '#fff'\n                                            }}\n                                            placeholder={'I’m very happy now. Just cannot think clearly! But if you really want to know about my wish, it is a brand new Wallet.'}/>\n                                    </View>\n                                    <View style={{ marginTop: 40, width: 250 }}>\n                                        <Button disabled={!isValid} color={'#000'}  onPress={handleSubmit} title={'SEND'}/>\n                                    </View>\n                                </View>\n                            )}\n                        </Formik>\n                    </View>\n                </View>\n            </LoadingOverlay>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n\n    imageAsset: {\n        marginVertical: 20,\n        paddingHorizontal: 30,\n        width: 400,\n        height: 200,\n    },\n    container: {\n        flex: 1,\n        backgroundColor: '#FFFEFA',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    formContainer: {\n        marginBottom: 100,\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        paddingBottom: 100\n        // paddingVertical: 70\n    },\n    yellowRibbon: {\n        paddingTop: 50,\n        color: '#FDF5D8',\n        height: 78,\n        width: '100%'\n    },\n    logo: {\n        marginVertical: 20,\n        paddingHorizontal: 30,\n        width: 200,\n        height: 200,\n    },\n    title: {\n        fontWeight: 'bold',\n        fontSize: 16,\n    },\n    titleBar: {\n        fontSize: 38\n    },\n    button: {\n        borderRadius: 3,\n        padding: 20,\n        marginVertical: 10,\n        marginTop: 10,\n        backgroundColor: '#1B95E0',\n    },\n    buttonText: {\n        color: '#fff',\n        fontWeight: 'bold',\n        fontSize: 16,\n    },\n});\n\nexport default Recipient;\n","module.exports = __webpack_public_path__ + \"static/media/recipient_gift.1caf0984.jpg\";","export {\n    BrowserRouter as Router,\n    Link,\n    Route,\n    Switch,\n    withRouter\n} from 'react-router-dom';\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}